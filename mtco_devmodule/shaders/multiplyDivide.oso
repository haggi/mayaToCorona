OpenShadingLanguage 1.00
# Compiled by oslc 1.6.0dev
shader multiplyDivide
param	vector	input1	0 0 0 		 %read{0,17} %write{2147483647,-1}
param	vector	input2	0 0 0 		 %read{3,18} %write{2147483647,-1}
param	int	operation	0 		 %read{1,7} %write{2147483647,-1}
oparam	vector	outOutput	0 0 0 		 %read{2147483647,-1} %write{0,20}
const	int	$const1	1		 %read{1,16} %write{2147483647,-1}
temp	int	$tmp1	 %read{2,2} %write{1,1}
const	int	$const2	2		 %read{4,20} %write{2147483647,-1}
temp	int	$tmp2	 %read{5,5} %write{4,4}
const	int	$const3	3		 %read{7,7} %write{2147483647,-1}
temp	int	$tmp3	 %read{8,8} %write{7,7}
temp	float	$tmp4	 %read{12,12} %write{11,11}
const	int	$const4	0		 %read{9,12} %write{2147483647,-1}
temp	float	$tmp5	 %read{11,11} %write{9,9}
temp	float	$tmp6	 %read{11,11} %write{10,10}
temp	float	$tmp7	 %read{16,16} %write{15,15}
temp	float	$tmp8	 %read{15,15} %write{13,13}
temp	float	$tmp9	 %read{15,15} %write{14,14}
temp	float	$tmp10	 %read{20,20} %write{19,19}
temp	float	$tmp11	 %read{19,19} %write{17,17}
temp	float	$tmp12	 %read{19,19} %write{18,18}
code ___main___
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:5
# 	if( operation == 1) //multiply
	assign		outOutput input1 	%filename{"H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl"} %line{5} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:6
# 	{
	eq		$tmp1 operation $const1 	%line{6} %argrw{"wrr"}
	if		$tmp1 4 4 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:8
# 	}
	mul		outOutput input1 input2 	%line{8} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:10
# 	{
	eq		$tmp2 operation $const2 	%line{10} %argrw{"wrr"}
	if		$tmp2 7 7 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:12
# 	}
	div		outOutput input1 input2 	%line{12} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:14
# 	{
	eq		$tmp3 operation $const3 	%line{14} %argrw{"wrr"}
	if		$tmp3 21 21 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:16
# 		outOutput[1] = pow(input1[1],input2[1]);
	compref		$tmp5 input1 $const4 	%line{16} %argrw{"wrr"}
	compref		$tmp6 input2 $const4 	%argrw{"wrr"}
	pow		$tmp4 $tmp5 $tmp6 	%argrw{"wrr"}
	compassign	outOutput $const4 $tmp4 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:17
# 		outOutput[2] = pow(input1[2],input2[2]);
	compref		$tmp8 input1 $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp9 input2 $const1 	%argrw{"wrr"}
	pow		$tmp7 $tmp8 $tmp9 	%argrw{"wrr"}
	compassign	outOutput $const1 $tmp7 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToCorona/mtco_devmodule/shaders\\multiplyDivide.osl:18
# 	}
	compref		$tmp11 input1 $const2 	%line{18} %argrw{"wrr"}
	compref		$tmp12 input2 $const2 	%argrw{"wrr"}
	pow		$tmp10 $tmp11 $tmp12 	%argrw{"wrr"}
	compassign	outOutput $const2 $tmp10 	%argrw{"wrr"}
	end
